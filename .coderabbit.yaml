reviews:
  review_status: true
  auto_review:
    enabled: true
    base_branches:
      - next
    drafts: true
  path_instructions:
    - path: "**/*.php"
      instructions: |
        Flag any usage of error_log() as it should be replaced with proper Monolog logging mechanisms provided by [zmsslim](https://github.com/it-at-m/eappointment/blob/b52b5d59c5013615d7fbfeaf595f3fdc047017d1/zmsslim/src/Slim/Bootstrap.php#L76) which should be setup in the App/Application of each module:
        1. For error handling: Use the proper Monolog logging framework with error levels
        2. For application info logs: Use the proper Monolog logging framework with info levels
        3. For debugging: Use a dedicated debug logger or remove debug statements
        4. For CLI output: Use a CLI output handler or symfony/console
        5. The application [log levels](https://github.com/it-at-m/eappointment/blob/b52b5d59c5013615d7fbfeaf595f3fdc047017d1/zmsslim/src/Slim/Bootstrap.php#L60) are as follows DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, and EMERGENCY

        Example replacement:
        ```php
        // Instead of:
        error_log("Import failed - " . $e->getMessage());
        
        // Use:
        $log->error("Import failed", ['error' => $e->getMessage()]);
        ```
    - path: "**/*.{js,jsx,ts,tsx}"
      instructions: |
        Flag any usage of console.log() as it should be replaced with proper logging or removed:
        1. For development: console.debug()
        2. For production: Remove console.log() statements or use structured logging
        3. For errors: Use error console.error()

        Example replacement:
        ```javascript
        // Instead of:
        console.log('User data:', userData);
        
        // Use:
        console.debug('Processing user data', { userData });
        // or for development only:
        Remove the console.log entirely
        ```
