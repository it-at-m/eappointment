{
    "type": "object",
    "description": "A mail represents a message to be send to a client and may have different content-types like in a multipart email.",
    "example": {
        "id": 1234,
        "createIP": "145.15.3.10",
        "createTimestamp": 1447931596000,
        "department": {
            "id": 123,
            "preferences": {
                "notifications": {
                    "enabled": true,
                    "identification": "terminvereinbarung@mitte.berlin.de",
                    "sendConfirmationEnabled": true,
                    "sendReminderEnabled": true
                }
            }
        },
        "multipart": [
            {
                "queueId": "1234",
                "mime": "text\/html",
                "content": "<h1>Title<\/h1><p>Message<\/p>",
                "base64": false
            },
            {
                "queueId": "1234",
                "mime": "text\/plain",
                "content": "Title\nMessage",
                "base64": false
            },
            {
                "queueId": "1234",
                "mime": "text\/calendar",
                "content": "QkVHSU46VkNBTEVOREFSDQpYLUxPVFVTLUNIQVJTRVQ6VVRGLTgNClZFUlNJT046Mi4wDQpQUk9ESUQ6Wk1TLUJlcmxpbg0KQkVHSU46VlRJTUVaT05FDQpUWklEOkV1cm9wZS9CZXJsaW4NClgtTElDLUxPQ0FUSU9OOkV1cm9wZS9CZXJsaW4NCkJFR0lOOkRBWUxJR0hUDQpUWk9GRlNFVEZST006KzAxMDANClRaT0ZGU0VUVE86KzAyMDANClRaTkFNRTpDRVNUDQpEVFNUQVJUOjE5NzAwMzI5VDAyMDAwMA0KUlJVTEU6RlJFUT1ZRUFSTFk7SU5URVJWQUw9MTtCWURBWT0tMVNVO0JZTU9OVEg9Mw0KRU5EOkRBWUxJR0hUDQpCRUdJTjpTVEFOREFSRA0KVFpPRkZTRVRGUk9NOiswMjAwDQpUWk9GRlNFVFRPOiswMTAwDQpUWk5BTUU6Q0VUDQpEVFNUQVJUOjE5NzAxMDI1VDAzMDAwMA0KUlJVTEU6RlJFUT1ZRUFSTFk7SU5URVJWQUw9MTtCWURBWT0tMVNVO0JZTU9OVEg9MTANCkVORDpTVEFOREFSRA0KRU5EOlZUSU1FWk9ORQ0KTUVUSE9EOlBVQkxJU0gNCkJFR0lOOlZFVkVOVA0KVUlEOjIwMTYwNDA4LTE2OTUzMA0KRFRTVEFSVDtUWklEPUV1cm9wZS9CZXJsaW46MjAxNjA0MDhUMDkxMDAwDQpEVEVORDtUWklEPUV1cm9wZS9CZXJsaW46MjAxNjA0MDhUMDkyMDAwDQpEVFNUQU1QOjIwMTYwNTEyVDE2MDgwOVoNCkxPQ0FUSU9OOkLDvHJnZXJhbXQgUmF0aGF1cyBUaWVyZ2FydGVuIE1hdGhpbGRlLUphY29iLVBsYXR6LCAxMDU1MSBCZXJsaW4NClNVTU1BUlk6QmVybGluLVRlcm1pbjogMTY5NTMwDQpERVNDUklQVElPTjogU2VociBnZWVocnRlL3IgRnJhdSBvZGVyIEhlcnIgWjY1NjM1IFxuXG4gaGllcm1pdCBiZXN0w6R0aWdlbiB3aXIgSWhuZW4gSWhyZW4gZ2VidWNodGVuIFRlcm1pbiBhbSBGci4gMDguIEFwcmlsIDIwMTYgdW0gMDk6MTAgVWhyXG5cbiBPcnQ6IELDvHJnZXJhbXQgUmF0aGF1cyBUaWVyZ2FydGVuIE1hdGhpbGRlLUphY29iLVBsYXR6LCAxMDU1MSBCZXJsaW5cbiBcblxuIElocmUgVm9yZ2FuZ3NudW1tZXIgaXN0IGRpZSAiMTY5NTMwIlxuIElociBDb2RlIHp1ciBUZXJtaW5hYnNhZ2Ugb2RlciAtw6RuZGVydW5nIGxhdXRldCAiYjNiMCJcblxuIFphaGx1bmdzaGlud2VpczogQW0gU3RhbmRvcnQga2FubiBudXIgbWl0IGdpcm9jYXJkIChtaXQgUElOKSBiZXphaGx0IHdlcmRlbi5cblxuIFNpZSBoYWJlbiBmb2xnZW5kZSBEaWVuc3RsZWlzdHVuZyBhdXNnZXfDpGhsdDogXG4gXG5Bbm1lbGR1bmcgZWluZXIgV29obnVuZ1xuICBcblZvcmF1c3NldHp1bmdlblxuICBcbi0gIHBlcnPDtm5saWNoZSBWb3JzcHJhY2hlIG9kZXIgVmVydHJldHVuZyBkdXJjaCBlaW5lIGFuZGVyZSBQZXJzb24gICBJaHJlIHBlcnPDtm5saWNoZSBWb3JzcHJhY2hlIGlzdCBlcmZvcmRlcmxpY2ggb2RlciBzaWUgd2VyZGVuIGR1cmNoIGVpbmUgYW5kZXJlIFBlcnNvbiB2ZXJ0cmV0ZW4uXG4gQmVpIGRlciBBYmdhYmUgZGVzIEFubWVsZGVmb3JtdWxhcnMgdW5kIGRlciDDvGJyaWdlbiBlcmZvcmRlcmxpY2hlbiBVbnRlcmxhZ2VuIGvDtm5uZW4gU2llIHNpY2ggZHVyY2ggZWluZSBnZWVpZ25ldGUgUGVyc29uIHZlcnRyZXRlbiBsYXNzZW4uIERpZSB2b24gSWhuZW4gYmVhdWZ0cmFndGUgUGVyc29uIG11c3MgaW4gZGVyIExhZ2Ugc2VpbiwgZGllIHp1ciBvcmRudW5nc2dlbcOkw59lbiBGw7xocnVuZyBkZXMgTWVsZGVyZWdpc3RlcnMgZXJmb3JkZXJsaWNoZW4gQXVza8O8bmZ0ZSB6dSBlcnRlaWxlbi4gRGFzIEFubWVsZGVmb3JtdWxhciBtw7xzc2VuIFNpZSBlaWdlbmjDpG5kaWcgdW50ZXJzY2hyZWliZW4uICAgICAgXG5FcmZvcmRlcmxpY2hlIFVudGVybGFnZW5cbiAgXG4tICBJZGVudGl0w6R0c25hY2h3ZWlzICAgUGVyc29uYWxhdXN3ZWlzLCBSZWlzZXBhc3MsIEtpbmRlcnJlaXNlcGFzcyBmw7xyIGRldXRzY2hlIFN0YWF0c2FuZ2Vow7ZyaWdlIG9kZXIgTmF0aW9uYWxwYXNzIG9kZXIgUGFzc2Vyc2F0enBhcGllcmUgZsO8ciBhdXNsw6RuZGlzY2hlIFN0YWF0c2FuZ2Vow7ZyaWdlLlxuIEJpdHRlIGJyaW5nZW4gU2llIGFsbGUgZ2VuYW5udGVuIHVuZCBJaG5lbiB2b3JsaWVnZW5kZW4gRG9rdW1lbnRlIGbDvHIgYWxsZSB1bXppZWhlbmRlbiBQZXJzb25lbiBtaXQuICAgXG4tICBCZWlibGF0dCB6dXIgQW5tZWxkdW5nIChiZWkgbWVocmVyZW4gV29obnVuZ2VuKSAgIE51ciB3ZW5uIFNpZSBJaHJlIGJpc2hlcmlnZSBXb2hudW5nIGluIERldXRzY2hsYW5kIG5pY2h0IGF1ZmdlYmVuIHVuZCBkaWUgbmV1ZSBXb2hudW5nIHp1c8OkdHpsaWNoIGFubWVsZGVuIHdvbGxlbiwgbXVzcyBmw7xyIFNpZSB1bmQgSWhyZSBnZ2YuIG1pdHppZWhlbmRlbiBGYW1pbGllbm1pdGdsaWVkZXIgZWluZSBXb2hudW5nIGFscyBIYXVwdHdvaG51bmcgYmVzdGltbXQgd2VyZGVuLiBCaXR0ZSBsZXNlbiBTaWUgc2ljaCBpbiBkaWVzZW0gRmFsbGUgZGllIEhpbndlaXNlIGF1ZiBkZW0gRm9ybXVsYXIgZHVyY2guICAgXG4tICBBbm1lbGRlZm9ybXVsYXIgICBQZXJzb25lbiBlaW5lciBGYW1pbGllLCBkaWUgYXVzIGRlciBiaXNoZXJpZ2VuIFdvaG51bmcgenVzYW1tZW4gaW4gZGllIG5ldWUgV29obnVuZyB6aWVoZW4sIGvDtm5uZW4gZ2VtZWluc2FtIGVpbiBBbm1lbGRlZm9ybXVsYXIgYmVudXR6ZW4uXG4gQmVpIG1laHIgYWxzIDIgYW56dW1lbGRlbmRlbiBQZXJzb25lbiBiaXR0ZSB3ZWl0ZXJlbiBNZWxkZXNjaGVpbiBiZW51dHplbi5cbiBCaXR0ZSBiZWFjaHRlbiBTaWUgaW0gQmVyZWljaCAiV2VpdGVyZsO8aHJlbmRlIEluZm9ybWF0aW9uZW4iIGRpZSAiV2VpdGVyZsO8aHJlbmRlbiBIaW53ZWlzZSB6dSBBbm1lbGR1bmdlbiIgLiAgIFxuLSAgUGVyc29uZW5zdGFuZHN1cmt1bmRlICAgTnVyIGbDvHIgSWhyZSBlcnN0ZSBBbm1lbGR1bmcgaW4gQmVybGluIGlzdCBlcyB6d2Vja2RpZW5saWNoLCB3ZW5uIFNpZSBlaW5lIFBlcnNvbmVuc3RhbmRzdXJrdW5kZSB6dXIgQW5tZWxkdW5nIG1pdGJyaW5nZW4gdW5kIHZvcmxlZ2VuICh6LkIuIEhlaXJhdHN1cmt1bmRlLCBHZWJ1cnRzdXJrdW5kZSkuICAgXG4tICBFaW56dWdzYmVzdMOkdGlndW5nIGRlcyBXb2hudW5nc2dlYmVycyAoVmVybWlldGVyKSAgIFNlaXQgZGVtIDEuIE5vdmVtYmVyIDIwMTUgaXN0IGRlciBXb2hudW5nc2dlYmVyIHZlcnBmbGljaHRldCwgZGVtIE1lbGRlcGZsaWNodGlnZW4gZGVuIEVpbnp1ZyBpbm5lcmhhbGIgdm9uIHp3ZWkgV29jaGVuIG5hY2ggZGVtIEVpbnp1ZyBzY2hyaWZ0bGljaCBtaXQgVW50ZXJzY2hyaWZ0IHp1IGJlc3TDpHRpZ2VuLiBEaWUgQmVzdMOkdGlndW5nIG11c3MgZm9sZ2VuZGUgRGF0ZW4gZW50aGFsdGVuOiBOYW1lIHVuZCBBbnNjaHJpZnQgZGVzIFdvaG51bmdzZ2ViZXJzLCBFaW56dWdzZGF0dW0sIEFuc2NocmlmdCBkZXIgV29obnVuZyB1bmQgTmFtZW4gZGVyIG1lbGRlcGZsaWNodGlnZW4gUGVyc29uZW4uIERpZSBWb3JsYWdlIGVpbmVzIE1pZXR2ZXJ0cmFnZXMgZXJzZXR6dCBuaWNodCBkaWUgRWluenVnc2Jlc3TDpHRpZ3VuZy5cbiBFaW4gTXVzdGVyIGbDvHIgZGllIEVpbnp1Z3NiZXN0w6R0aWd1bmcgZGVzIFdvaG51bmdzZ2ViZXJzIHN0ZWh0IElobmVuIHVudGVyICJGb3JtdWxhcmUiIHp1ciBWZXJmw7xndW5nLiAgICAgIFxuR2Viw7xocmVuXG4gZ2Viw7xocmVuZnJlaTsgZGFzIGdpbHQgYXVjaCBmw7xyIGRpZSBNZWxkZWJlc3TDpHRpZ3VuZy4gXG4gU29sbHRlbiBTaWUgZGVuIFRlcm1pbiBuaWNodCB3YWhybmVobWVuIGvDtm5uZW4sIHNhZ2VuIFNpZSBpaG4gYml0dGUgYWIuIFxuXG4gRGllcyBrw7ZubmVuIFNpZSDDvGJlciB1bnNlcmUgSW50ZXJuZXRidWNodW5nc3NlaXRlIGh0dHBzOi8vc2VydmljZS1iZXJsaW4vdGVybWludmVyZWluYmFydW5nL3Rlcm1pbi9tYW5hZ2UvMTY5NTMwLyB1bnRlciBBbmdhYmUgSWhyZXIgVm9yZ2FuZ3NudW1tZXIgIjE2OTUzMCIgdW5kIElocmVzIHBlcnPDtm5saWNoZW4gQWJzYWdlLUNvZGVzICJiM2IwIiBlcmxlZGlnZW4uXG5cbiBcbiBNaXQgZnJldW5kbGljaGVtIEdydcOfXG4gSWhyZSBUZXJtaW52ZXJ3YWx0dW5nIGRlcyBMYW5kZXMgQmVybGluIFxuXG4gaHR0cHM6Ly9zZXJ2aWNlLWJlcmxpbi90ZXJtaW52ZXJlaW5iYXJ1bmcvIA0KQkVHSU46VkFMQVJNDQpBQ1RJT046RElTUExBWQ0KVFJJR0dFUjotUDFEDQpERVNDUklQVElPTjpFcmlubmVydW5nDQpFTkQ6VkFMQVJNDQpFTkQ6VkVWRU5UDQpFTkQ6VkNBTEVOREFS",
                "base64": true
            }
        ],
        "process": {
            "clients": [
                {
                    "familyName": "Max Mustermann",
                    "email": "max@service.berlin.de",
                    "telephone": "030 115"
                }
            ],
            "id": 123456,
            "authKey": "1234",
            "reminderTimestamp": 1447931730000,
            "scope": {
                "id": 151,
                "preferences": {
                    "appointment": {
                        "deallocationDuration": "5",
                        "endInDaysDefault": "60",
                        "multipleSlotsEnabled": "1",
                        "reservationDuration": "5",
                        "startInDaysDefault": "0"
                    },
                    "client": {
                        "alternateAppointmentUrl": "",
                        "appointmentsPerMail": "",
                        "slotsPerAppointment": "",
                        "whitelistedMails": "",
                        "amendmentActivated": "0",
                        "amendmentLabel": "",
                        "customTextfieldActivated": "0",
                        "customTextfieldLabel": "",
                        "emailRequired": "1",
                        "emailConfirmationActivated": 1,
                        "adminMailOnAppointment": "0",
                        "adminMailOnDeleted": "0",
                        "adminMailOnUpdated": "0",
                        "telephoneActivated": "1",
                        "telephoneRequired": "1"
                    },
                    "notifications": {
                        "confirmationContent": "",
                        "enabled": "1",
                        "headsUpContent": "",
                        "headsUpTime": "0"
                    },
                    "pickup": {
                        "alternateName": "Ausgabe",
                        "isDefault": "0"
                    },
                    "queue": {
                        "callCountMax": "0",
                        "callDisplayText": "Herzlich Willkommen \r\nin Berlin Reinickendorf\r\n=====================\r\nTIP: Termin statt Wartezeit!\r\n=====================\r\nNutzen Sie die Online Terminvergabe unter:\r\nhttp:\/\/www.berlin.de\/ba-reinickendorf\/org\/buergeramt\/",
                        "firstNumber": "1000",
                        "lastNumber": "1999",
                        "processingTimeAverage": "00:15:00",
                        "publishWaitingTimeEnabled": "1",
                        "statisticsEnabled": "1"
                    },
                    "survey": {
                        "emailContent": "",
                        "enabled": "0",
                        "label": ""
                    },
                    "ticketprinter": {
                        "confirmationEnabled": "0",
                        "deactivatedText": "",
                        "notificationsAmendmentEnabled": "0",
                        "notificationsDelay": "0"
                    },
                    "workstation": {
                        "emergencyEnabled": "0"
                    }
                }
            },
            "status": "confirmed"
        },
        "subject": "Example Mail",
        "client": {
            "familyName": "Max Mustermann",
            "email": "max@service.berlin.de"
        }
    },
    "required": [
        "department",
        "multipart",
        "process",
        "subject",
        "client"
    ],
    "additionalProperties": false,
    "properties": {
        "id": {
            "type": "number"
        },
        "createIP": {
            "type": "string",
            "description": "IP Address of the creator"
        },
        "createTimestamp": {
            "type": "number",
            "description": "unix timestamp representing creation of the notification"
        },
        "department": {
            "type": "object",
            "description": "A department is a subunit in an organisation like \"Bürgeramt\", \"Standesamt\", \"Vertrieb\".",
            "example": {
                "id": 123,
                "contact": {
                    "country": "Germany",
                    "name": "Flughafen Schönefeld, Landebahn",
                    "postalCode": "15831",
                    "region": "Brandenburg",
                    "street": "Zaunstraße",
                    "streetNumber": "1"
                },
                "dayoff": [
                    {
                        "date": 1447921381000,
                        "name": "Betriebsfeier"
                    },
                    {
                        "date": 1447922381000,
                        "name": "Silvester"
                    }
                ],
                "email": "terminvereinbarung@mitte.berlin.de",
                "links": [
                    {
                        "name": "Zuständigkeitsverzeichnis",
                        "url": "http:\/\/www.berlin.de\/ba-mitte\/zustaendigkeiten\/",
                        "target": true
                    }
                ],
                "preferences": {
                    "notifications": {
                        "enabled": true,
                        "identification": "terminvereinbarung@mitte.berlin.de",
                        "sendConfirmationEnabled": true,
                        "sendReminderEnabled": true
                    }
                },
                "scopes": [
                    {
                        "id": 123
                    }
                ],
                "clusters": [
                    {
                        "id": 45
                    }
                ]
            },
            "additionalProperties": false,
            "properties": {
                "id": {
                    "type": "number"
                },
                "contact": {
                    "$ref": "contact.json"
                },
                "clusters": {
                    "type": "array",
                    "items": {
                        "$ref": "cluster.json"
                    }
                },
                "dayoff": {
                    "type": "array",
                    "items": {
                        "$ref": "dayoff.json"
                    }
                },
                "email": {
                    "type": "string",
                    "description": "sender address for reminder mails to the clients",
                    "pattern": "^[a-zA-Z0-9_\\-\\.]{2,}@[a-zA-Z0-9_\\-\\.]{2,}\\.[a-z]{2,}$|^$",
                    "x-locale": {
                        "de_DE": {
                            "pointer": "E-Mail",
                            "messages": {
                                "pattern": "Die E-Mail Adresse muss eine valide E-Mail im Format max@mustermann.de sein"
                            }
                        }
                    }
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "link.json"
                    }
                },
                "name": {
                    "type": "string"
                },
                "preferences": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "notifications": {
                            "type": "object",
                            "additionalProperties": false,
                            "properties": {
                                "enabled": {
                                    "type": [
                                        "boolean",
                                        "number"
                                    ],
                                    "description": "true if sms are allowed"
                                },
                                "identification": {
                                    "type": [
                                        "string"
                                    ],
                                    "description": "usually an email address"
                                },
                                "sendConfirmationEnabled": {
                                    "type": [
                                        "boolean",
                                        "number"
                                    ],
                                    "description": "true if confirmation sms are enabled"
                                },
                                "sendReminderEnabled": {
                                    "type": [
                                        "boolean",
                                        "number"
                                    ],
                                    "description": "true if reminder sms are enabled"
                                }
                            }
                        }
                    }
                },
                "scopes": {
                    "type": "array",
                    "items": {
                        "$ref": "scope.json"
                    }
                }
            }
        },
        "multipart": {
            "type": "array",
            "description": "message parts to send",
            "items": {
                "type": "object",
                "description": "A message part to send. For images an other binary files, the content can be encoded as base64.",
                "example": {
                    "queueId": 1234,
                    "mime": "text\/html",
                    "content": "<h1>Title<\/h1><p>Message<\/p>",
                    "base64": false
                },
                "required": [
                    "mime",
                    "content"
                ],
                "additionalProperties": false,
                "properties": {
                    "queueId": {
                        "type": "number",
                        "description": "optional ID of queued message item, this part belongs to"
                    },
                    "mime": {
                        "type": "string",
                        "description": "The mime type used in 'Content-Type', should include charset if necessary. If no charset is given, utf-8 is expected."
                    },
                    "content": {
                        "type": "string",
                        "description": "content to transfer"
                    },
                    "base64": {
                        "type": "boolean",
                        "default": false,
                        "description": "True if the content is encoded as base64."
                    }
                }
            }
        },
        "process": {
            "type": "object",
            "description": "A process represents a request from one or more clients, usually including an appointment. Compared to an appointment, the process has additional information about the status of the request from the client.",
            "example": {
                "amendment": "Beispiel Termin",
                "customTextfield": "Beispiel Termin",
                "appointments": [
                    {
                        "date": 1447869171,
                        "scope": {
                            "id": 123
                        },
                        "slotCount": 2
                    }
                ],
                "authKey": "abcd",
                "clients": [
                    {
                        "familyName": "Max Mustermann",
                        "email": "max@service.berlin.de",
                        "telephone": "030 115"
                    }
                ],
                "createIP": "145.15.3.10",
                "createTimestamp": 1447931596,
                "lastChange": 1447931596,
                "id": 123456,
                "queue": {
                    "arrivalTime": 1447922893,
                    "callCount": 1,
                    "callTime": 1447922938,
                    "lastCallTime": 1447922938,
                    "number": "123",
                    "waitingTime": 2,
                    "withAppointment": 1,
                    "status": "queued"
                },
                "reminderTimestamp": 1447931730,
                "requests": [
                    {
                        "id": "123456",
                        "name": "Name der Dienstleistung",
                        "source": "dldb"
                    }
                ],
                "scope": {
                    "id": 123,
                    "hint": "Standort aus Beispiel-Termin",
                    "provider": {
                        "name": "Bürgeramt 1",
                        "contact": {
                            "name": "Bürgeramt 1",
                            "street": "Unter den Linden",
                            "streetNumber": "1",
                            "postalCode": "12345",
                            "city": "Berlin"
                        },
                        "displayName":"001"
                    }
                },
                "status": "confirmed"
            },
            "required": [
                "id"
            ],
            "additionalProperties": false,
            "properties": {
                "amendment": {
                    "type": [
                        "string"
                    ],
                    "description": "additional information for this process from the client",
                    "default": ""
                },
                "apiclient": {
                    "$ref": "apiclient.json"
                },
                "appointments": {
                    "type": "array",
                    "items": {
                        "$ref": "appointment.json"
                    }
                },
                "archiveId": {
                    "type": "number",
                    "description": "Number is used to identify a process in an archive (for statistical purposes)\n"
                },
                "authKey": {
                    "type": "string",
                    "description": "key for client to delete or change process"
                },
                "showUpTime": {
                    "type": "string",
                    "description": "unix timestamp of showing up after call"
                },
                "processingTime": {
                    "type": "string",
                    "description": "unix timestamp that cumulates time each time a processes is called"
                  },
                "timeoutTime": {
                    "type": "string",
                    "description": "unix timestamp of after a call is entered or re-entered into the queue"
                },  
                "finishTime": {
                    "type": "string",
                    "description": "unix timestamp og time when process has been finished"
                },
                "clients": {
                    "type": "array",
                    "items": {
                        "$ref": "client.json"
                    }
                },
                "createIP": {
                    "type": "string",
                    "description": "IP Address of the creator"
                },
                "createTimestamp": {
                    "type": "number",
                    "description": "unix timestamp representing creation of the process"
                },
                "id": {
                    "type": "number",
                    "description": "Number is used to identify appointments like on call displays\n",
                    "minimum": 1000
                },
                "lastChange": {
                    "type": "number",
                    "description": "unix timestamp of the last change on this process"
                },
                "queue": {
                    "$ref": "queue.json"
                },
                "reminderTimestamp": {
                    "type": "number",
                    "description": "timestamp of last reminder message"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "$ref": "request.json"
                    }
                },
                "scope": {
                    "$ref": "scope.json"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "free",
                        "reserved",
                        "confirmed",
                        "queued",
                        "called",
                        "processing",
                        "pending",
                        "pickup",
                        "finished",
                        "missed",
                        "parked",
                        "archived",
                        "deleted",
                        "anonymized",
                        "blocked",
                        "conflict"
                    ],
                    "description": "Status of the process. The following values are possible:\n  * free: open for reservation\n  * reserved: for updating data, no validation yet\n  * confirmed: appointment\n  * queued: confirmed and in waiting queue\n  * called: show on call displays\n  * processing: client appeared and gets service\n  * pending: client has to return to fetch papers\n  * pickup: client is called to fetch papers\n  * finished: successfully processed\n  * missed: no client appeared\n  * archived: only used in statistics\n  * deleted: blocking appointment time\n  * anonymized: for statistically purposes only\n  * blocked: to avoid the reuse of IDs on the same day\n  * conflict: mark process as conflict for check functions\n"
                }
            }
        },
        "subject": {
            "type": "string",
            "description": "Subject part for the mail"
        },
        "client": {
            "type": "object",
            "description": "A client is usually a customer in a scope who intends to get his request solved. Usually the client has an appointment, if not he got a process number from a ticket printer and his familyName is set to 'Spontankunde'.",
            "example": {
                "familyName": "Max Mustermann",
                "email": "max@service.berlin.de",
                "emailSendCount": 0,
                "notificationsSendCount": 0,
                "surveyAccepted": false,
                "telephone": "030 115"
            },
            "additionalProperties": false,
            "properties": {
                "email": {
                    "type": "string",
                    "description": "mail address"
                },
                "emailSendCount": {
                    "type": "number",
                    "description": "number of reminder mails send"
                },
                "familyName": {
                    "type": "string",
                    "default": "Spontankunde",
                    "description": "name of the client"
                },
                "notificationsSendCount": {
                    "type": "number",
                    "description": "number of reminder sms send"
                },
                "surveyAccepted": {
                    "type": "boolean",
                    "description": "true if clients allows survey requests"
                },
                "telephone": {
                    "type": "string",
                    "description": "telephone number"
                }
            }
        }
    }
}