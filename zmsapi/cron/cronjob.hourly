#!/bin/bash
DIR=$(dirname ${BASH_SOURCE[0]})
BIN=$DIR/../vendor/bin
EXPORT=$DIR/../data/
set -a
[ -z "$ZMS_ENV" ] && [ -e /etc/sysconfig/zms ] && source /etc/sysconfig/zms
set +a

# Parse --city flag
CITY=""
for arg in "$@"; do
    if [[ $arg == --city=* ]]; then
        CITY=$(echo $arg | cut -d= -f2)
    fi
done

if [[ $ZMS_CRONROOT =~ ^1|on|true|yes$ ]]; then
    # Determine which URL and transformer to use based on city flag
    if [ "$CITY" == "munich" ]; then
        # Use Munich transformer for SADB export
        # Fall back to default URL if Munich-specific variable is not set
        SOURCE_URL="${ZMS_SOURCE_DLDB_MUNICH:-$ZMS_SOURCE_DLDB}"
        if [ -z "$SOURCE_URL" ]; then
            echo "Error: ZMS_SOURCE_DLDB_MUNICH or ZMS_SOURCE_DLDB environment variable is not set"
            exit 1
        fi
        echo "Using Munich transformer for city: $CITY"
        echo "Source URL: $SOURCE_URL"
        $BIN/dldbget-munich -o $EXPORT -b "$SOURCE_URL"

    elif [ "$CITY" == "berlin" ]; then
        # Use Berlin API format
        # Fall back to default URL if Berlin-specific variable is not set
        SOURCE_URL="${ZMS_SOURCE_DLDB_BERLIN:-$ZMS_SOURCE_DLDB}"
        if [ -z "$SOURCE_URL" ]; then
            echo "Error: ZMS_SOURCE_DLDB_BERLIN or ZMS_SOURCE_DLDB environment variable is not set"
            exit 1
        fi
        echo "Using Berlin API transformer for city: $CITY"
        echo "Source URL: $SOURCE_URL"
        $BIN/dldbget -o $EXPORT -b "$SOURCE_URL" -q "$ZMS_ENV"

    else
        # Default behavior - use ZMS_SOURCE_DLDB
        if [ -z "$ZMS_SOURCE_DLDB" ]; then
            echo "Error: ZMS_SOURCE_DLDB environment variable is not set"
            exit 1
        fi
        echo "Using default API transformer:"
        echo "Source URL: $ZMS_SOURCE_DLDB"
        $BIN/dldbget -o $EXPORT -b "$ZMS_SOURCE_DLDB" -q "$ZMS_ENV"
    fi
    $BIN/updateDldbData --commit
fi
