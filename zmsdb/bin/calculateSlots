#!/usr/bin/env php
<?php
ini_set('memory_limit', '1024M');
require_once(__DIR__."/script_bootstrap.php");

function logMessage($message, $level = 'INFO') {
    $time = date('Y-m-d H:i:s');
    error_log("[$time] [$level] $message");
}

$dates = preg_grep('#^\d\d\d\d-\d\d?-\d\d?#', $argv);
$now = new \DateTimeImmutable();
if (count($dates)) {
    $now = new \DateTimeImmutable(array_shift($dates));
} elseif (class_exists('\App') && isset(\App::$now)) {
    $now = \App::$now;
}
$repair = false;
if (preg_grep('#^--repair$#', $argv)) {
    $repair = true;
}
if (preg_grep('#^--commit$#', $argv)) {
    logMessage("⏳    Start Slot-Berechnung: {$now->format('c')}");
    $calculator = new \BO\Zmsdb\Helper\CalculateSlots(preg_grep('#^--?v(erbose)?$#', $argv));
    try {
        $stepStart = microtime(true);
        $delete = preg_grep('#^--delete$#', $argv);
        $calculator->writeCalculations($now, $delete);
        logMessage("✅    Slot-Berechnung fertig in " . round(microtime(true) - $stepStart, 2) . " s");
    } catch (\BO\Zmsdb\Exception\Pdo\LockTimeout $exception) {
        $calculator->log("Unexpected end due to lock timeout, showing tracelog:");
        $calculator->dumpLogs();
        error_log($exception->getTraceAsString());
    } catch (\Exception $exception) {
        $calculator->dumpLogs();
        throw $exception;
    }
} else {
    $dbname = \BO\Zmsdb\Connection\Select::$writeSourceName;
    $username = \BO\Zmsdb\Connection\Select::$username;
    echo "Usage: {$argv[0]} --commit [--verbose] [--delete] [--repair] [2018-04-01]\n"
        . "\tCalculates and updates available appointments/slots for availabilities.\n\n";
    echo "\tDatabase:             $dbname as $username\n";
    echo "\tDate for calculation: ".$now->format('c')."\n\n";
}