name: Build Images and Run Tests

on:
  push:
    tags:
      - '**'
    branches:
      - '**'
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: zmsadmin
            php_version: "8.0"
          - module: zmsapi
            php_version: "8.0"
          - module: zmscalldisplay
            php_version: "8.0"
          - module: zmsmessaging
            php_version: "8.0"
          - module: zmsstatistic
            php_version: "8.0"

            
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Install python3
        run: sudo apt install -y python3 python3-click python3-git

      - name: Referencing local Modules and Libraries
        run: python3 ./cli modules reference-libraries --no-symlink

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 10

      - name: Build Image
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          docker build . \
            --file ".resources/Containerfile" \
            --tag "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" \
            --build-arg "MODULE=${{ matrix.module }}" \
            --build-arg "PHP_VERSION=${{ matrix.php_version }}"
          docker push "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag"


  zmsadmin-test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: zmsadmin
            php_version: "8.0"
      max-parallel: 1  # Ensures jobs run sequentially
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          (cd ${{ matrix.module }} && composer install --no-progress --prefer-dist --optimize-autoloader)

      - name: Run Unit Tests
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          docker run --rm -v ${{ github.workspace }}:/workspace "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" /bin/bash -c "cd /workspace/${{ matrix.module }} && ./vendor/bin/phpunit"



  zmsapi-test:
    needs: build
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.1
        env:
          MYSQL_ROOT_PASSWORD: zmsapi
          MYSQL_DATABASE: zmsbo
          MYSQL_CHARACTER_SET: utf8mb4
          MYSQL_COLLATION: utf8mb4_unicode_ci
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
    strategy:
      matrix:
        include:
          - module: zmsapi
            php_version: "8.0"
      max-parallel: 1  # Ensures jobs run sequentially
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
            modules=('zmsapi' 'zmsdb' 'zmsentities' 'zmsdldb' 'zmsslim')
            for module in "${modules[@]}"; do
              echo "Installing Composer dependencies for $module"
              (cd "$module" && composer install --no-progress --prefer-dist --optimize-autoloader)
            done

      - name: Set up Database and Run Unit Tests
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          echo "Setup fixtures..."
          mkdir -p /home/runner/work/eappointment/eappointment/data
          cp -R /home/runner/work/eappointment/eappointment/zmsdb/tests/Zmsdb/fixtures/* /home/runner/work/eappointment/eappointment/data/
          ln -sfn /home/runner/work/eappointment/eappointment/zmsdb/tests/Zmsdb/fixtures /home/runner/work/eappointment/eappointment/data
          echo "Fixtures copied."
          echo "Starting migrations and testdata import..."
          docker run --rm --network host \
            -v /home/runner/work/eappointment/eappointment:/workspace \
            -v /home/runner/work/eappointment/eappointment/data:/var/www/html/data \
            -e MYSQL_HOST=127.0.0.1 \
            -e MYSQL_DATABASE=zmsbo \
            -e MYSQL_USER=root \
            -e MYSQL_ROOT_PASSWORD=password \
            -e MYSQL_PORT=3306 \
            "ghcr.io/it-at-m/eappointment/${{ matrix.module }}:$tag" \
            /bin/bash -c "./vendor/bin/importTestData --commit && cd /workspace/${{ matrix.module }} && ./vendor/bin/phpunit"


  zmscalldisplay-test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: zmscalldisplay
            php_version: "8.0"
      max-parallel: 1  # Ensures jobs run sequentially
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          (cd ${{ matrix.module }} && composer install --no-progress --prefer-dist --optimize-autoloader)

      - name: Run Unit Tests
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          docker run --rm -v ${{ github.workspace }}:/workspace "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" /bin/bash -c "cd /workspace/${{ matrix.module }} && ./vendor/bin/phpunit"


  zmsdb-test:
    needs: build
    runs-on: ubuntu-latest
    services:
      mariadb:
        image: mariadb:10.1
        env:
          MYSQL_ROOT_PASSWORD: zmsdb
          MYSQL_DATABASE: zmsbo
          MYSQL_CHARACTER_SET: utf8mb4
          MYSQL_COLLATION: utf8mb4_unicode_ci
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          modules=('zmsdb' 'zmsentities' 'zmsdldb' 'zmsslim')
          for module in "${modules[@]}"; do
            echo "Installing Composer dependencies for $module"
            (cd "$module" && composer install --no-progress --prefer-dist --optimize-autoloader)
          done

      - name: Import Test Data and Run Unit Tests for zmsdb
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DATABASE: zmsbo
          MYSQL_USER: root
          MYSQL_ROOT_PASSWORD: zmsdb
          MYSQL_PORT: 3306
        run: |
          ./zmsdb/bin/importTestData --commit
          ./zmsdb/vendor/bin/phpunit


  zmsentities-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          modules=('zmsdb' 'zmsentities' 'zmsdldb' 'zmsslim')
          for module in "${modules[@]}"; do
            echo "Installing Composer dependencies for $module"
            (cd "$module" && composer install --no-progress --prefer-dist --optimize-autoloader)
          done

      - name: Import Test Data and Run Unit Tests for zmsdb
        run: |
          ./zmsentities/vendor/bin/phpunit




  zmsmessaging-test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: zmsmessaging
            php_version: "8.0"
      max-parallel: 1  # Ensures jobs run sequentially
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          (cd ${{ matrix.module }} && composer install --no-progress --prefer-dist --optimize-autoloader)

      - name: Run Unit Tests
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          docker run --rm -v ${{ github.workspace }}:/workspace "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" /bin/bash -c "cd /workspace/${{ matrix.module }} && ./vendor/bin/phpunit"

  zmsstatistic-test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - module: zmsstatistic
            php_version: "8.0"
      max-parallel: 1  # Ensures jobs run sequentially
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "8.0"
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql
          coverage: xdebug

      - name: Install Composer Dependencies
        run: |
          (cd ${{ matrix.module }} && composer install --no-progress --prefer-dist --optimize-autoloader)

      - name: Run Unit Tests
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            tag="branch-$tag"
          fi
          docker run --rm -v ${{ github.workspace }}:/workspace "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" /bin/bash -c "cd /workspace/${{ matrix.module }} && ./vendor/bin/phpunit"













 
