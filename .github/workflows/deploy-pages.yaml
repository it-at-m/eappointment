name: Deploy to GitHub Pages

on:
  workflow_call:
    inputs:
      coverage_artifact:
        description: 'Name of the coverage reports artifact'
        required: true
        type: string
        default: 'coverage-reports'
      api_docs_artifact:
        description: 'Name of the API documentation artifact'
        required: true
        type: string
        default: 'api-docs'
      security_artifact:
        description: 'Name of the security reports artifact'
        required: true
        type: string
        default: 'security-reports'

permissions:
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Create public directory
        run: mkdir -p public/diagrams

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install jsonschema jinja2

      - name: Create schema converter script
        run: |
          cat > convert_schema.py <<'EOL'
          # Previous imports remain the same...

          def convert_schemas_to_mermaid(schemas: List[Tuple[str, Dict[str, Any], str]], prefix_filter: str = None) -> str:
              """Convert schemas to a Mermaid diagram, optionally filtering by prefix."""
              # Filter schemas if prefix is provided
              if prefix_filter is not None:
                  schemas = [(name, schema, prefix) for name, schema, prefix in schemas if prefix == prefix_filter]
              
              # Rest of the conversion logic remains the same...

          def create_diagram_page(title: str, mermaid: str) -> str:
              """Create HTML page with diagram."""
              template = Template("""
          <!DOCTYPE html>
          <html>
            <head>
              <title>{{ title }}</title>
              <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
              <script>
                mermaid.initialize({
                  startOnLoad: true,
                  securityLevel: 'loose',
                  logLevel: 'debug',
                  maxTextSize: 900000,
                  startZoom: 0.6
                });
              </script>
              <style>
                body {
                  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                  line-height: 1.6;
                  margin: 0;
                  padding: 0;
                  height: 100vh;
                  display: flex;
                  flex-direction: column;
                }
                h1 {
                  margin: 0;
                  padding: 1rem;
                  background: #f6f8fa;
                  border-bottom: 1px solid #eaecef;
                }
                .diagram-container {
                  flex: 1;
                  position: relative;
                  overflow: hidden;
                }
                .diagram {
                  position: absolute;
                  top: 50%;
                  left: 50%;
                  transform: translate(-50%, -50%) scale(0.6);
                  transform-origin: center center;
                  cursor: grab;
                }
                .diagram:active {
                  cursor: grabbing;
                }
                .controls {
                  position: fixed;
                  top: 1rem;
                  right: 1rem;
                  background: white;
                  padding: 1rem;
                  border: 1px solid #eaecef;
                  border-radius: 6px;
                  box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                  z-index: 1000;
                }
                #search {
                  width: 200px;
                  padding: 0.5rem;
                  margin-bottom: 0.5rem;
                }
                #zoom-level {
                  margin-left: 1rem;
                }
                .nav {
                  padding: 0.5rem 1rem;
                  background: #f6f8fa;
                  border-bottom: 1px solid #eaecef;
                }
                .nav a {
                  margin-right: 1rem;
                  color: #0366d6;
                  text-decoration: none;
                }
                .nav a:hover {
                  text-decoration: underline;
                }
              </style>
            </head>
            <body>
              <h1>{{ title }}</h1>
              <div class="nav">
                <a href="zmsapi.html">ZMS API Schema</a>
                <a href="zmscitizenapi.html">ZMS Citizen API Schema</a>
                <a href="index.html">Combined View</a>
              </div>
              
              <div class="controls">
                <input type="text" id="search" placeholder="Search classes...">
                <button onclick="zoomIn()">Zoom In</button>
                <button onclick="zoomOut()">Zoom Out</button>
                <button onclick="resetZoom()">Reset</button>
                <span id="zoom-level">60%</span>
              </div>
              
              <div class="diagram-container">
                <div class="diagram">
                  <pre class="mermaid">{{ mermaid }}</pre>
                </div>
              </div>

              <script>
                // Previous zoom and pan script remains the same...
              </script>
            </body>
          </html>
          """)
              return template.render(title=title, mermaid=mermaid)

          if __name__ == '__main__':
              print("Starting schema conversion...")
              diagrams_dir = Path('public/diagrams')
              diagrams_dir.mkdir(parents=True, exist_ok=True)
              
              # Load all schemas
              schemas = load_all_schemas()
              
              # Generate separate diagrams
              zmsapi_mermaid = convert_schemas_to_mermaid(schemas, prefix_filter='')
              zmscitizenapi_mermaid = convert_schemas_to_mermaid(schemas, prefix_filter='citizen')
              combined_mermaid = convert_schemas_to_mermaid(schemas)
              
              # Create pages
              diagrams_dir.joinpath('zmsapi.html').write_text(
                  create_diagram_page('ZMS API Schema', zmsapi_mermaid)
              )
              diagrams_dir.joinpath('zmscitizenapi.html').write_text(
                  create_diagram_page('ZMS Citizen API Schema', zmscitizenapi_mermaid)
              )
              diagrams_dir.joinpath('index.html').write_text(
                  create_diagram_page('Combined API Schemas', combined_mermaid)
              )
              
              print("Schema conversion complete")
          EOL


      - name: Generate schema diagrams and pages
        run: python convert_schema.py

      - name: Create index page
        run: |
          cat > public/index.html <<'EOL'
          <!DOCTYPE html>
          <html>
            <head>
              <title>eAppointment Documentation</title>
              <style>
                :root {
                  --primary: #0366d6;
                  --bg: #ffffff;
                  --text: #24292e;
                }
                body {
                  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Helvetica, Arial, sans-serif;
                  line-height: 1.6;
                  color: var(--text);
                  max-width: 1200px;
                  margin: 0 auto;
                  padding: 2rem;
                  background: var(--bg);
                }
                h1, h2 {
                  border-bottom: 1px solid #eaecef;
                  padding-bottom: 0.3em;
                }
                .grid {
                  display: grid;
                  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
                  gap: 2rem;
                  margin: 2rem 0;
                }
                .card {
                  background: #f6f8fa;
                  border-radius: 6px;
                  padding: 1.5rem;
                }
                .card h2 {
                  margin-top: 0;
                }
                ul {
                  list-style-type: none;
                  padding: 0;
                }
                li {
                  margin: 0.5rem 0;
                }
                a {
                  color: var(--primary);
                  text-decoration: none;
                }
                a:hover {
                  text-decoration: underline;
                }
              </style>
            </head>
            <body>
              <h1>ZMS eAppointment Technical Documentation</h1>
              
              <div class="grid">
                <div class="card">
                  <h2>API Documentation</h2>
                  <ul>
                    <li><a href="https://it-at-m.github.io/eappointment/zmscitizenapi/public/doc/index.html">Zmscitizenapi API Documentation</a></li>
                    <li><a href="https://it-at-m.github.io/eappointment/zmsapi/public/doc/index.html">Zmsapi Documentation</a></li>
                  </ul>
                </div>

                <div class="card">
                  <h2>Schema Diagrams</h2>
                  <ul>
                    <li><a href="diagrams/zmsapi.html">ZMS API Schema</a></li>
                    <li><a href="diagrams/zmscitizenapi.html">ZMS Citizen API Schema</a></li>
                    <li><a href="diagrams/index.html">Combined View</a></li>
                  </ul>
                </div>

                <div class="card">
                  <h2>Code Test Coverage Reports</h2>
                  <ul>
                    <li><a href="coverage/coverage-zmsadmin/html/">Zmsadmin Coverage</a></li>
                    <li><a href="coverage/coverage-zmscalldisplay/html/">Zmscalldisplay Coverage</a></li>
                    <li><a href="coverage/coverage-zmscitizenapi/html/">Zmscitizenapi Coverage</a></li>
                    <li><a href="coverage/coverage-zmsdldb/html/">Zmsdldb Coverage</a></li>
                    <li><a href="coverage/coverage-zmsentities/html/">Zmsentities Coverage</a></li>
                    <li><a href="coverage/coverage-zmsmessaging/html/">Zmsmessaging Coverage</a></li>
                    <li><a href="coverage/coverage-zmsslim/html/">Zmsslim Coverage</a></li>
                    <li><a href="coverage/coverage-zmsstatistic/html/">Zmsstatistic Coverage</a></li>
                    <li><a href="coverage/coverage-zmsticketprinter/html/">Zmsticketprinter Coverage</a></li>
                    <li><a href="coverage/coverage-zmsapi/html/">Zmsapi Coverage</a></li>
                    <li><a href="coverage/coverage-zmsdb/html/">Zmsdb Coverage</a></li>
                    <li><a href="coverage/coverage-zmsclient/html/">Zmsclient Coverage</a></li>
                  </ul>
                </div>

                <div class="card">
                  <h2>OWASP Security Reports</h2>
                  <ul>
                    <li><a href="security/security-report-zmsadmin/dependency-check-report.html">Zmsadmin Security Report</a></li>
                    <li><a href="security/security-report-zmscalldisplay/dependency-check-report.html">Zmscalldisplay Security Report</a></li>
                    <li><a href="security/security-report-zmscitizenapi/dependency-check-report.html">Zmscitizenapi Security Report</a></li>
                    <li><a href="security/security-report-zmsdldb/dependency-check-report.html">Zmsdldb Security Report</a></li>
                    <li><a href="security/security-report-zmsentities/dependency-check-report.html">Zmsentities Security Report</a></li>
                    <li><a href="security/security-report-zmsmessaging/dependency-check-report.html">Zmsmessaging Security Report</a></li>
                    <li><a href="security/security-report-zmsslim/dependency-check-report.html">Zmsslim Security Report</a></li>
                    <li><a href="security/security-report-zmsstatistic/dependency-check-report.html">Zmsstatistic Security Report</a></li>
                    <li><a href="security/security-report-zmsticketprinter/dependency-check-report.html">Zmsticketprinter Security Report</a></li>
                    <li><a href="security/security-report-zmsapi/dependency-check-report.html">Zmsapi Security Report</a></li>
                    <li><a href="security/security-report-zmsdb/dependency-check-report.html">Zmsdb Security Report</a></li>
                    <li><a href="security/security-report-zmsclient/dependency-check-report.html">Zmsclient Security Report</a></li>
                    <li><a href="security/zap/zap-scan-report.html">ZAP Scan Reports</a></li>
                  </ul>
                </div>
              </div>
            </body>
          </html>
          EOL

      - name: Download coverage reports
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.coverage_artifact }}
          path: public

      - name: Download API docs
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.api_docs_artifact }}
          path: public

      - name: Download security reports
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.security_artifact }}
          path: public

      - name: Debug - List directory structure
        run: |
          echo "=== Directory Structure ==="
          ls -R public/

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4