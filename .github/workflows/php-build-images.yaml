name: build images

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Action
        uses: actions/checkout@main
      - name: Install python3 and jq
        run: sudo apt install -y python3 python3-click python3-git jq
      - name: Cache Third-Party Dependencies
        id: cache-composer-build
        uses: actions/cache@v4
        with:
          path: |
            ${{ matrix.module }}/vendor-cache
          key: ${{ runner.os }}-composer-build-${{ matrix.module }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-build-${{ matrix.module }}-
            ${{ runner.os }}-composer-build-

      - name: Restore Third-Party Dependencies
        if: steps.cache-composer-build.outputs.cache-hit == 'true'
        run: |
          echo "Restoring cached third-party dependencies for ${{ matrix.module }}..."
          if [ -d "${{ matrix.module }}/vendor-cache" ]; then
            echo "Restoring ${{ matrix.module }} third-party dependencies"
            mkdir -p "${{ matrix.module }}/vendor"
            # Copy only third-party packages, exclude eappointment
            find "${{ matrix.module }}/vendor-cache" -maxdepth 1 -type d ! -name "vendor-cache" -exec cp -r {} "${{ matrix.module }}/vendor/" \; 2>/dev/null || true
          fi
        shell: bash

      - name: Referencing local Modules and Libraries
        run: |
          echo "Setting up module references for ${{ matrix.module }}..."
          # Update composer.json to reference local eappointment modules
          echo "Updating ${{ matrix.module }} composer.json..."
          # Add local repository references
          jq '.repositories = (.repositories // []) | map(select(.type != "path" or .url != "../*")) | . + [{"type": "path", "url": "../*", "options": {"symlink": false}}]' "${{ matrix.module }}/composer.json" > "${{ matrix.module }}/composer.json.tmp" && mv "${{ matrix.module }}/composer.json.tmp" "${{ matrix.module }}/composer.json"
          # Update eappointment dependencies to @dev
          jq '.require = (.require | to_entries | map(if .key | startswith("eappointment/") then .value = "@dev" else . end) | from_entries)' "${{ matrix.module }}/composer.json" > "${{ matrix.module }}/composer.json.tmp" && mv "${{ matrix.module }}/composer.json.tmp" "${{ matrix.module }}/composer.json"
          echo "Module references completed"
        shell: bash

      - name: Install Composer Dependencies
        run: |
          echo "Installing Composer dependencies for ${{ matrix.module }}"
          (cd "${{ matrix.module }}" && composer install --no-progress --prefer-dist --optimize-autoloader)
        shell: bash

      - name: Cache Third-Party Dependencies
        if: steps.cache-composer-build.outputs.cache-hit != 'true'
        run: |
          echo "Caching third-party dependencies for ${{ matrix.module }}..."
          echo "Caching ${{ matrix.module }} third-party dependencies"
          mkdir -p "${{ matrix.module }}/vendor-cache"
          # Copy only third-party packages, exclude eappointment
          if [ -d "${{ matrix.module }}/vendor" ]; then
            find "${{ matrix.module }}/vendor" -maxdepth 1 -type d ! -name "eappointment" ! -name "vendor" -exec cp -r {} "${{ matrix.module }}/vendor-cache/" \; 2>/dev/null || true
          fi
        shell: bash

      - name: Cache Hit Notification
        if: steps.cache-composer-build.outputs.cache-hit == 'true'
        run: |
          echo "ðŸš€ CACHE HIT! Third-party dependencies are cached for ${{ matrix.module }}"
          echo "âœ… Third-party dependencies cached - composer install will be faster"
          echo "ðŸ“¦ Using cached third-party packages from previous run"
      - name: Download CHANGELOG.md for zmsadmin and zmsstatistic
        if: matrix.module == 'zmsadmin' || matrix.module == 'zmsstatistic'
        run: |
          if [ "${{ matrix.module }}" = "zmsadmin" ]; then
            DIR=zmsadmin
          else
            DIR=zmsstatistic
          fi
          curl -sSL -o $DIR/changelog_build.md https://raw.githubusercontent.com/it-at-m/eappointment/main/CHANGELOG.md
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 20
      - name: Build Image
        run: |
          tag="${{ github.ref_name }}"
          if [ "${{ github.ref_type }}" = "branch" ]; then
            # Sanitize the tag by replacing invalid characters with a hyphen
            tag="branch-$(echo "$tag" | sed 's/[\/:]/-/g')"
          fi
          docker build . \
            --file ".resources/Containerfile" \
            --tag "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag" \
            --build-arg "MODULE=${{ matrix.module }}" \
            --build-arg "PHP_VERSION=${{ matrix.php_version }}"
          docker push "ghcr.io/${{ github.repository }}/${{ matrix.module }}:$tag"
    strategy:
      matrix:
        include:
          - module: zmsadmin
            php_version: "8.3"
          - module: zmsapi
            php_version: "8.3"
          - module: zmscalldisplay
            php_version: "8.3"
          - module: zmscitizenapi
            php_version: "8.3"
          - module: zmsmessaging
            php_version: "8.3"
          - module: zmsstatistic
            php_version: "8.3"
          - module: zmsticketprinter
            php_version: "8.3"
