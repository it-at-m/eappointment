{% embed "block/scaffholding/board.twig" with {'class': 'appointment-form'} %}

    {% from 'element/helper/form.twig' import formgroup, formbutton, checkboxfield, selectfield, inputfield %}

    {% block board_title %}
        {% if selectedProcess %}
            <span id="appointment-edit-title" tabindex="0">Terminvereinbarung Aktualisieren</span>
        {% else %}
            Terminvereinbarung Neu
        {% endif %}

        <script>
            if (document.getElementById('appointment-edit-title')) {
                document.querySelector('.board.appointment-form').focus();
                document.getElementById('appointment-edit-title').focus();
            }
        </script>
    {% endblock %}

    {% block board_body %}
        {% include "element/helper/messageHandler.twig" %}

        {% set addRequestAuralMessage = "Die folgende Dienstleistung wurde zur Liste der ausgewählten Dienstleistungen hinzugefügt" %}
        {% set cleanupRequestAuralMessage = "Die Auswahl der Dienstleistungen wurde zurückgesetzt" %}
        {% set removeRequestAuralMessage = "Die folgende Dienstleistung ist nicht mehr ausgewählt" %}
        {% set chooseRequestFirst = "Wählen Sie bitte zuerst die Dienstleistungen und die Anzahl der Slots aus bevor Sie das Datum (Zugriffschlüssel m) und die Uhrzeit (Zugriffschlüssel z) auswählen." %}

        <form data-formData="{{ formData|json_encode }}" data-saved-process="{{ selectedProcess.id }}">
            <div class="aural" id="auralmessage" aria-live="polite" data-aural='{"clean":"{{ cleanupRequestAuralMessage|trans }}", "add":"{{ addRequestAuralMessage|trans }}","remove":"{{ removeRequestAuralMessage|trans }}", "chooseRequestFirst":"{{ chooseRequestFirst|trans }}"}'></div>
            <label class="label">{% trans %}Standort{% endtrans %}</label>
            {% include 'block/cluster/scopeSelect.twig' with {'source': 'appointmentForm'} %}
            {% if not scope %}
                <div class="message message--info">
                    {% trans %}
                        <strong>Clusteransicht aktiviert</strong><br />
                        Für diesen Arbeitsplatz wurde "Alle Clusterstandorte anzeigen" ausgewählt. Wählen Sie für eine Terminvereinbarung vorab einen Standort aus. Formulareingaben werden beim Wechsel auf einen anderen Standort im Cluster zurückgesetzt.{% endtrans %}
                </div>
            {% endif %}
            <div class="appointmentForm-input-fields" {% if not scope and not selectedProcess %}style="display:none"{% endif %}>
                <div class="grid">
                    <div class="grid__item one-half">
                        <div class="form-group">
                            <label for="process_date">{% trans %}Datum{% endtrans %}</label>
                            <div class="controls">
                                <div id="appointment-datepicker"></div>
                                {{ inputfield({
                                    "id":"process_selected_date",
                                    "type":"hidden",
                                    "name":"selecteddate",
                                    "value":selectedDate|date('Y-m-d'),
                                }) }}
                            </div>
                        </div>
                    </div>
                    <div class="grid__item one-half SLOTCNT">
                        {% if scope.preferences.appointment.multipleSlotsEnabled or selectedProcess.scope.preferences.appointment.multipleSlotsEnabled %}
                            {% set slotCountOptions = [] %}
                            {% for slotCount in 1..20 %}
                                {% if selectedProcess.appointments|first.slotCount == slotCount %}
                                    {% set selected = "selected" %}
                                {% else %}
                                    {% set selected = "" %}
                                {% endif %}
                                {% set duration = slotTimeInMinutes * slotCount %}
                                {% set slotCountOptions = slotCountOptions|merge([{ "value": slotCount, "name": duration, "selected":selected}]) %}
                            {% endfor %}
                            {{ formgroup(
                                {"label": "Termindauer in Minuten"},
                                [{
                                    "type":"select",
                                    "parameter": {
                                        "accesskey":"o",
                                        "name": "slotCount",
                                        "id": "appointmentForm_slotCount",
                                        "width": 3,
                                        "options": slotCountOptions,
                                    }
                                }]
                            ) }}
                        {% endif %}
                    </div>
                </div>

                <div class="grid">
                    <div class="grid__item one-half">
                        <div data-free-process-list>
                            {% include "block/appointment/freeProcessList.twig" %}
                        </div>

                        {% set familyName = selectedProcess.clients|first.familyName|decodeEntities %}
                        {% if formData.familyName._unvalidated %}
                            {% set familyName = formData.familyName._unvalidated %}
                        {% endif %}

                        {% set title = "" %}
                        {% if selectedProcess %}
                            {% set title = "Bestätigter Termin: " ~ selectedProcess.appointments|first.date|date("Y-m-d H:i") %}
                        {% endif %}
                        {{ formgroup(
                            {"label": "Name", "required": 1, "errors": formData.familyName.messages},
                            [{
                                "type": "input",
                                "parameter": {
                                    "name": "familyName",
                                    "title": title,
                                    "placeholder": "Pflichtfeld",
                                    "value": familyName,
                                    "accesskey":"n"
                                }
                            }]
                        ) }}

                        {% set telephone = selectedProcess.clients|first.telephone %}
                        {% if formData.telephone._unvalidated %}
                            {% set telephone = formData.telephone._unvalidated %}
                        {% endif %}
                        {{ formgroup(
                            {"label": "Telefonnummer", "required": scope.preferences.client.telephoneRequired, "errors": formData.telephone.messages},
                            [{
                                "type": "input",
                                "parameter":{
                                    "name": "telephone",
                                    "value": telephone,
                                    "accesskey":"t"
                                }
                            }]
                        ) }}
                        {% if department.preferences.notifications.enabled %}
                            <div id="sms">
                                {% if department.preferences.notifications.sendConfirmationEnabled %}
                                    {{ formgroup(
                                        {},
                                        [{
                                            "type": "checkbox",
                                            "parameter": {
                                                "name": "sendConfirmation",
                                                "label": "Terminbestätigung per SMS",
                                                "value": 1,
                                                "accesskey":"b",
                                                "checked": 0
                                            }
                                        }]
                                    ) }}
                                {% endif %}
                                {% if scope.preferences.appointment.notificationHeadsUpEnabled and department.preferences.notifications.sendReminderEnabled %}

                                    {% set selectedProcessHeadsUpTime = 0 %}
                                    {% set minutesToAppointment = selectedDate|date('U') %}
                                    {% if selectedProcess %}
                                        {% set selectedProcessHeadsUpTime = selectedProcess.appointments|first.date - selectedProcess.reminderTimestamp %}
                                        {% set minutesToAppointment = (selectedProcess.appointments|first.date - getNow()|date('U')) / 60 %}
                                    {% endif %}
                                    {% set allowedHeadsUpTime = [30,60,120,180,240,1440,2880] %}
                                    {% set headsUpTimeOptions = [{"value": 0, "name": "ohne Erinnerung"}] %}
                                    {% for headsUpTimeValue in allowedHeadsUpTime %}
                                        {% set value = headsUpTimeValue / 60 %}
                                        {% if value < 1 %}
                                            {% set label = headsUpTimeValue ~ " Minuten" %}
                                        {% elseif value == 1 %}
                                            {% set label = "1 Stunde" %}
                                        {% elseif value > 1 and value < 24 %}
                                            {% set label = value ~ " Stunden" %}
                                        {% elseif value == 24 %}
                                            {% set label = "1 Tag" %}
                                        {% elseif value > 24 %}
                                            {% set label = value / 24 ~ " Tage" %}
                                        {% endif %}

                                        {% if headsUpTimeValue * 60 == selectedProcessHeadsUpTime %}{% set selected = "selected"%}{% else %}{% set selected = ""%}{% endif %}

                                        {% if headsUpTimeValue <= minutesToAppointment %}
                                            {% set headsUpTimeOptions = headsUpTimeOptions|merge([{ "value": headsUpTimeValue * 60, "name": label ~ " vorher", "selected": selected }]) %}
                                        {% endif %}
                                    {% endfor %}

                                    {{ formgroup(
                                        {"label": "Terminerinnerung per SMS"},
                                        [{
                                            "type": "select",
                                            "parameter": {
                                                "name": "headsUpTime",
                                                "options": headsUpTimeOptions,
                                                "accesskey":"r"
                                            }
                                        }]
                                    ) }}
                                {% endif %}
                            </div>
                        {% endif %}

                        {% if scope.preferences.client.emailRequired or scope.preferences.client.emailFrom %}
                            <div id="email">
                                {% set email = selectedProcess.clients|first.email %}
                                {% if formData.email._unvalidated %}
                                    {% set email = formData.email._unvalidated %}
                                {% endif %}
                                {{ formgroup(
                                    {"label": "E-Mail", "required": selectedProcess.preferences.client.emailRequired|default(scope.preferences.client.emailRequired), "errors": formData.email.messages},
                                    [{
                                        "type": "input",
                                        "parameter": {
                                            "name": "email",
                                            "value": email,
                                            "accesskey":"a"
                                        }
                                    }]
                                ) }}

                                {% if formData.sendMailConfirmation._unvalidated %}
                                    {% set mcChecked = formData.sendMailConfirmation._unvalidated %}
                                {% endif %}
                                {{ formgroup(
                                    {},
                                    [{
                                        "type": "checkbox",
                                        "parameter": {
                                            "name": "sendMailConfirmation",
                                            "label": "Mit E-Mail Bestätigung",
                                            "value": 1,
                                            "accesskey":"i",
                                            "checked": (mcChecked) ? mcChecked : 1
                                        }
                                    }]
                                ) }}
                            </div>
                            {% if scope.preferences.survey.enabled %}
                                {% set defaultLabel = 'Zustimmung Kundenbefragung' %}
                                {{ formgroup(
                                    {},
                                    [{
                                        "type": "checkbox",
                                        "parameter": {
                                            "accesskey":"k",
                                            "name": "surveyAccepted",
                                            "label": scope.preferences.survey.label|default(defaultLabel|trans),
                                            "value": 1,
                                            "checked": selectedProcess.clients|first.surveyAccepted|default(0),
                                            "disabled": (scope.preferences.survey.emailContent == '')
                                        }
                                    }]
                                ) }}
                                {% if scope.preferences.survey.emailContent == '' %}
                                    <div class="message message--info" style="margin-top:-1.2rem;">
                                        {% trans %}Die Kundenbefragung wurde ohne E-Mail-Text erstellt! Prüfen Sie bitte die Standort-Einstellungen!{% endtrans %}
                                    </div>
                                {% endif %}
                            {% endif %}
                        {% endif %}
                        {{ formgroup(
                            {
                                "label": "Anmerkung",
                                "checked": scope.preferences.client.amendmentActivated,
                                "class": "form-group--nomaxwidth",
                                "errors": formData.amendment.messages
                            },
                            [{
                                "type":"textarea",
                                "parameter": {
                                    "name": "amendment",
                                    "rows": "3",
                                    "maxlength": 500,
                                    "value": selectedProcess.amendment,
                                    "accesskey":"w"
                                }
                            }]
                        ) }}

                        {% if scope.preferences.client.customTextfieldActivated|default(0) == 1 %}
                            {{ formgroup(
                                {
                                    "label": scope.preferences.client.customTextfieldLabel,
                                    "required": selectedProcess.preferences.client.customTextfieldRequired|default(scope.preferences.client.customTextfieldRequired),
                                    "errors": formData.customTextfield.messages,
                                    "checked": scope.preferences.client.customTextfieldActivated,
                                },
                                [{
                                    "type": "input",
                                    "parameter": {
                                        "name": "customTextfield",
                                        "value": selectedProcess.customTextfield,
                                        "accesskey":"a"
                                    }
                                }]
                            ) }}
                        {% endif %}
                    </div>

                    <div id="requests_checkboxlist" class="grid__item one-half">
                        <div>
                            {% set selectedRequests = [] %}
                            {% if selectedProcess %}
                                {% for request in selectedProcess.requests %}
                                    {% set selectedRequests = selectedRequests|merge([ request.id ]) %}
                                {% endfor %}
                            {% endif %}

                            {% if formData.requests._unvalidated %}
                                {% set selectedRequests = formData.requests._unvalidated %}
                            {% endif %}
                            {% if requestList|length > 0 %}
                            {% set requestsOptions = [] %}
                            {% for request in requestList %}
                                {% if request.id in selectedRequests %}
                                    {% set checked = "1" %}
                                {% else %}
                                    {% set checked = "0" %}
                                {% endif %}

                                {% set requestName = request.name %}
                                {% set duration = slotTimeInMinutes * request.timeSlotCount %}
                                {% if scope.preferences.appointment.multipleSlotsEnabled or selectedProcess.scope.preferences.appointment.multipleSlotsEnabled %}
                                    {% set requestName = request.name ~ " (" ~ duration ~ " min)" %}
                                {% endif %}
                                {% set requestsOptions = requestsOptions|merge([{ "value": request.id, "name": requestName, "class": "service-checkbox", "data": {'slots': request.timeSlotCount}, "selected": checked }]) %}
                            {% endfor %}
                            {{ formgroup(
                                {
                                    "groupTag": "fieldset",
                                    "legend": "Dienstleistung",
                                    "errors": formData.requests.messages,
                                    "id": "select-requests"
                                },
                                [{
                                    "type": "checkboxSelect",
                                    "parameter": {
                                        "ariaLabel": "Dienstleistungen Auswahlliste",
                                        "accesskey":"g",
                                        "height": "10em",
                                        "options": requestsOptions
                                    }
                                }]
                            ) }}
                        </div>
                        <div>
                            {% set requestsOptions = [] %}
                            {% for requestGroup in requestsByCount %}
                                {% set slotCount = requestGroup.request.timeSlotCount %}
                                {% if requestGroup.request.id in selectedRequests %}
                                    {% set checked = "1" %}
                                {% else %}
                                    {% set checked = "0" %}
                                {% endif %}
                                {% set requestsOptions = requestsOptions|merge([{ "value": requestGroup.request.id, "name": requestGroup.request.name, "data": {"count": requestGroup.count, "slots": slotCount}, "selected": checked }]) %}
                            {% endfor %}

                            <fieldset class="form-group">
                                <legend class="label">Ausgewählte Dienstleistungen
                                </legend>
                                <div class="controls ">
                                    <div class="formelements">
                                        <div class="checkboxdeselect" id="deselect-requests">
                                            <ul aria-label="Dienstleistungen Abwahlliste" class="checkbox-list inner" style="height:auto; overflow: auto; margin: 0px">
                                                {% for option in requestsOptions %}
                                                    <li style="display: none;">
                                                        <div class="form-check" style="padding-left: unset">
                                                            <label>
                                                                <input class="minus" type="button" value="-" aria-label="Anzahl der Dienstleistung verringern auf {{ option.data.count - 1 }}" />
                                                                <span class="request-count">{{ option.data.count }}</span>
                                                                <input class="plus" type="button" value="+" aria-label="Anzahl der Dienstleistung erhöhen auf {{ option.data.count + 1 }}" />

                                                                <span class="hidden-inputs">
                                                                {% for i in 1..option.data.count %}
                                                                    <input style="display: none" class="form-check-input" type="checkbox" tabindex="0" name="requests[]" value="{{ option.value }}" data-slots="{{ option.data.slots }}">
                                                                {% endfor %}
                                                            </span>

                                                                <span>{{ option.name }}</span>
                                                            </label>
                                                        </div>
                                                    </li>
                                                {% endfor %}
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>

                            <button type="button" class="link clear-list" name="clear-list" accesskey="l">Liste leeren</button>
                        </div>
                        {% else %}
                            <div class="message-info">
                                Dem ausgewählten Standort sind keine Dienstleistungen zugeordnet.
                            </div>
                        {% endif %}
                    </div>
                </div>
                <small>*) Felder mit einem Stern müssen ausgefüllt werden. Außer für Spontankunden.</small>
                <div data-form-buttons>
                    {% include "block/appointment/formButtons.twig" %}
                </div>
            </div>
        </form>
    {% endblock %}
{% endembed %}
